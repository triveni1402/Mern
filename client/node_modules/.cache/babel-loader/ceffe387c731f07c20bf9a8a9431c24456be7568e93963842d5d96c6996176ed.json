{"ast":null,"code":"import _defineProperty from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nvar parse_1 = parse;\nvar serialize_1 = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n  var obj = {};\n  var opt = options || {};\n  var dec = opt.decode || decode;\n  var index = 0;\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n    var endIdx = str.indexOf(';', index);\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n    var key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n      obj[key] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  }\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n  var value = enc(val);\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n  var str = name + '=' + value;\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += '; Domain=' + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += '; Path=' + opt.path;\n  }\n  if (opt.expires) {\n    var expires = opt.expires;\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n    str += '; Expires=' + expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n  if (opt.secure) {\n    str += '; Secure';\n  }\n  if (opt.partitioned) {\n    str += '; Partitioned';\n  }\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string' ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low';\n        break;\n      case 'medium':\n        str += '; Priority=Medium';\n        break;\n      case 'high':\n        str += '; Priority=High';\n        break;\n      default:\n        throw new TypeError('option priority is invalid');\n    }\n  }\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode(str) {\n  return str.indexOf('%') !== -1 ? decodeURIComponent(str) : str;\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode(val) {\n  return encodeURIComponent(val);\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate(val) {\n  return __toString.call(val) === '[object Date]' || val instanceof Date;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\nfunction hasDocumentCookie() {\n  var testingValue = typeof global === 'undefined' ? undefined : global.TEST_HAS_DOCUMENT_COOKIE;\n  if (typeof testingValue === 'boolean') {\n    return testingValue;\n  }\n  // Can we get/set cookies on document.cookie?\n  return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction parseCookies(cookies) {\n  if (typeof cookies === 'string') {\n    return parse_1(cookies);\n  } else if (typeof cookies === 'object' && cookies !== null) {\n    return cookies;\n  } else {\n    return {};\n  }\n}\nfunction readCookie(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var cleanValue = cleanupCookieValue(value);\n  if (!options.doNotParse) {\n    try {\n      return JSON.parse(cleanValue);\n    } catch (e) {\n      // At least we tried\n    }\n  }\n  // Ignore clean value if we failed the deserialization\n  // It is not relevant anymore to trim those values\n  return value;\n}\nfunction cleanupCookieValue(value) {\n  // express prepend j: before serializing a cookie\n  if (value && value[0] === 'j' && value[1] === ':') {\n    return value.substr(2);\n  }\n  return value;\n}\nvar Cookies = /*#__PURE__*/function () {\n  function Cookies(cookies) {\n    var _this = this;\n    var defaultSetOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Cookies);\n    this.changeListeners = [];\n    this.HAS_DOCUMENT_COOKIE = false;\n    this.update = function () {\n      if (!_this.HAS_DOCUMENT_COOKIE) {\n        return;\n      }\n      var previousCookies = _this.cookies;\n      _this.cookies = parse_1(document.cookie);\n      _this._checkChanges(previousCookies);\n    };\n    var domCookies = typeof document === 'undefined' ? '' : document.cookie;\n    this.cookies = parseCookies(cookies || domCookies);\n    this.defaultSetOptions = defaultSetOptions;\n    this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n  }\n  _createClass(Cookies, [{\n    key: \"_emitChange\",\n    value: function _emitChange(params) {\n      for (var i = 0; i < this.changeListeners.length; ++i) {\n        this.changeListeners[i](params);\n      }\n    }\n  }, {\n    key: \"_checkChanges\",\n    value: function _checkChanges(previousCookies) {\n      var _this2 = this;\n      var names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n      names.forEach(function (name) {\n        if (previousCookies[name] !== _this2.cookies[name]) {\n          _this2._emitChange({\n            name: name,\n            value: readCookie(_this2.cookies[name])\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_startPolling\",\n    value: function _startPolling() {\n      this.pollingInterval = setInterval(this.update, 300);\n    }\n  }, {\n    key: \"_stopPolling\",\n    value: function _stopPolling() {\n      if (this.pollingInterval) {\n        clearInterval(this.pollingInterval);\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!options.doNotUpdate) {\n        this.update();\n      }\n      return readCookie(this.cookies[name], options);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.doNotUpdate) {\n        this.update();\n      }\n      var result = {};\n      for (var name in this.cookies) {\n        result[name] = readCookie(this.cookies[name], options);\n      }\n      return result;\n    }\n  }, {\n    key: \"set\",\n    value: function set(name, value, options) {\n      if (options) {\n        options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n      } else {\n        options = this.defaultSetOptions;\n      }\n      var stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n      this.cookies = Object.assign(Object.assign({}, this.cookies), _defineProperty({}, name, stringValue));\n      if (this.HAS_DOCUMENT_COOKIE) {\n        document.cookie = serialize_1(name, stringValue, options);\n      }\n      this._emitChange({\n        name: name,\n        value: value,\n        options: options\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(name, options) {\n      var finalOptions = options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), {\n        expires: new Date(1970, 1, 1, 0, 0, 1),\n        maxAge: 0\n      });\n      this.cookies = Object.assign({}, this.cookies);\n      delete this.cookies[name];\n      if (this.HAS_DOCUMENT_COOKIE) {\n        document.cookie = serialize_1(name, '', finalOptions);\n      }\n      this._emitChange({\n        name: name,\n        value: undefined,\n        options: options\n      });\n    }\n  }, {\n    key: \"addChangeListener\",\n    value: function addChangeListener(callback) {\n      this.changeListeners.push(callback);\n      if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n        if (typeof window === 'object' && 'cookieStore' in window) {\n          window.cookieStore.addEventListener('change', this.update);\n        } else {\n          this._startPolling();\n        }\n      }\n    }\n  }, {\n    key: \"removeChangeListener\",\n    value: function removeChangeListener(callback) {\n      var idx = this.changeListeners.indexOf(callback);\n      if (idx >= 0) {\n        this.changeListeners.splice(idx, 1);\n      }\n      if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n        if (typeof window === 'object' && 'cookieStore' in window) {\n          window.cookieStore.removeEventListener('change', this.update);\n        } else {\n          this._stopPolling();\n        }\n      }\n    }\n  }]);\n  return Cookies;\n}();\nexport { Cookies as default };","map":{"version":3,"names":["parse_1","parse","serialize_1","serialize","__toString","Object","prototype","toString","fieldContentRegExp","str","options","TypeError","obj","opt","dec","decode","index","length","eqIdx","indexOf","endIdx","lastIndexOf","key","slice","trim","undefined","val","charCodeAt","tryDecode","name","enc","encode","test","value","maxAge","isNaN","isFinite","Math","floor","domain","path","expires","isDate","valueOf","toUTCString","httpOnly","secure","partitioned","priority","toLowerCase","sameSite","decodeURIComponent","encodeURIComponent","call","Date","e","hasDocumentCookie","testingValue","global","TEST_HAS_DOCUMENT_COOKIE","document","cookie","parseCookies","cookies","readCookie","cleanValue","cleanupCookieValue","doNotParse","JSON","substr","Cookies","defaultSetOptions","changeListeners","HAS_DOCUMENT_COOKIE","update","previousCookies","_checkChanges","domCookies","params","i","names","Set","keys","concat","forEach","_emitChange","pollingInterval","setInterval","clearInterval","doNotUpdate","result","assign","stringValue","stringify","finalOptions","callback","push","window","cookieStore","addEventListener","_startPolling","idx","splice","removeEventListener","_stopPolling","default"],"sources":["/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/universal-cookie/esm/index.mjs"],"sourcesContent":["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nvar parse_1 = parse;\nvar serialize_1 = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {};\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0;\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires;\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority;\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low';\n        break\n      case 'medium':\n        str += '; Priority=Medium';\n        break\n      case 'high':\n        str += '; Priority=High';\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n\nfunction hasDocumentCookie() {\n    const testingValue = typeof global === 'undefined'\n        ? undefined\n        : global.TEST_HAS_DOCUMENT_COOKIE;\n    if (typeof testingValue === 'boolean') {\n        return testingValue;\n    }\n    // Can we get/set cookies on document.cookie?\n    return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction parseCookies(cookies) {\n    if (typeof cookies === 'string') {\n        return parse_1(cookies);\n    }\n    else if (typeof cookies === 'object' && cookies !== null) {\n        return cookies;\n    }\n    else {\n        return {};\n    }\n}\nfunction readCookie(value, options = {}) {\n    const cleanValue = cleanupCookieValue(value);\n    if (!options.doNotParse) {\n        try {\n            return JSON.parse(cleanValue);\n        }\n        catch (e) {\n            // At least we tried\n        }\n    }\n    // Ignore clean value if we failed the deserialization\n    // It is not relevant anymore to trim those values\n    return value;\n}\nfunction cleanupCookieValue(value) {\n    // express prepend j: before serializing a cookie\n    if (value && value[0] === 'j' && value[1] === ':') {\n        return value.substr(2);\n    }\n    return value;\n}\n\nclass Cookies {\n    constructor(cookies, defaultSetOptions = {}) {\n        this.changeListeners = [];\n        this.HAS_DOCUMENT_COOKIE = false;\n        this.update = () => {\n            if (!this.HAS_DOCUMENT_COOKIE) {\n                return;\n            }\n            const previousCookies = this.cookies;\n            this.cookies = parse_1(document.cookie);\n            this._checkChanges(previousCookies);\n        };\n        const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n        this.cookies = parseCookies(cookies || domCookies);\n        this.defaultSetOptions = defaultSetOptions;\n        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }\n    _emitChange(params) {\n        for (let i = 0; i < this.changeListeners.length; ++i) {\n            this.changeListeners[i](params);\n        }\n    }\n    _checkChanges(previousCookies) {\n        const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n        names.forEach((name) => {\n            if (previousCookies[name] !== this.cookies[name]) {\n                this._emitChange({\n                    name,\n                    value: readCookie(this.cookies[name]),\n                });\n            }\n        });\n    }\n    _startPolling() {\n        this.pollingInterval = setInterval(this.update, 300);\n    }\n    _stopPolling() {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n        }\n    }\n    get(name, options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        return readCookie(this.cookies[name], options);\n    }\n    getAll(options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        const result = {};\n        for (let name in this.cookies) {\n            result[name] = readCookie(this.cookies[name], options);\n        }\n        return result;\n    }\n    set(name, value, options) {\n        if (options) {\n            options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n        }\n        else {\n            options = this.defaultSetOptions;\n        }\n        const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n        this.cookies = Object.assign(Object.assign({}, this.cookies), { [name]: stringValue });\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = serialize_1(name, stringValue, options);\n        }\n        this._emitChange({ name, value, options });\n    }\n    remove(name, options) {\n        const finalOptions = (options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\n        this.cookies = Object.assign({}, this.cookies);\n        delete this.cookies[name];\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = serialize_1(name, '', finalOptions);\n        }\n        this._emitChange({ name, value: undefined, options });\n    }\n    addChangeListener(callback) {\n        this.changeListeners.push(callback);\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.addEventListener('change', this.update);\n            }\n            else {\n                this._startPolling();\n            }\n        }\n    }\n    removeChangeListener(callback) {\n        const idx = this.changeListeners.indexOf(callback);\n        if (idx >= 0) {\n            this.changeListeners.splice(idx, 1);\n        }\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.removeEventListener('change', this.update);\n            }\n            else {\n                this._stopPolling();\n            }\n        }\n    }\n}\n\nexport { Cookies as default };\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,OAAO,GAAGC,KAAK;AACnB,IAAIC,WAAW,GAAGC,SAAS;;AAE3B;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,kBAAkB,GAAG,uCAAuC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASP,KAAK,CAACQ,GAAG,EAAEC,OAAO,EAAE;EAC3B,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIE,SAAS,CAAC,+BAA+B,CAAC;EACtD;EAEA,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,IAAIC,GAAG,GAAGH,OAAO,IAAI,CAAC,CAAC;EACvB,IAAII,GAAG,GAAGD,GAAG,CAACE,MAAM,IAAIA,MAAM;EAE9B,IAAIC,KAAK,GAAG,CAAC;EACb,OAAOA,KAAK,GAAGP,GAAG,CAACQ,MAAM,EAAE;IACzB,IAAIC,KAAK,GAAGT,GAAG,CAACU,OAAO,CAAC,GAAG,EAAEH,KAAK,CAAC;;IAEnC;IACA,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB;IACF;IAEA,IAAIE,MAAM,GAAGX,GAAG,CAACU,OAAO,CAAC,GAAG,EAAEH,KAAK,CAAC;IAEpC,IAAII,MAAM,KAAK,CAAC,CAAC,EAAE;MACjBA,MAAM,GAAGX,GAAG,CAACQ,MAAM;IACrB,CAAC,MAAM,IAAIG,MAAM,GAAGF,KAAK,EAAE;MACzB;MACAF,KAAK,GAAGP,GAAG,CAACY,WAAW,CAAC,GAAG,EAAEH,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MAC3C;IACF;IAEA,IAAII,GAAG,GAAGb,GAAG,CAACc,KAAK,CAACP,KAAK,EAAEE,KAAK,CAAC,CAACM,IAAI,EAAE;;IAExC;IACA,IAAIC,SAAS,KAAKb,GAAG,CAACU,GAAG,CAAC,EAAE;MAC1B,IAAII,GAAG,GAAGjB,GAAG,CAACc,KAAK,CAACL,KAAK,GAAG,CAAC,EAAEE,MAAM,CAAC,CAACI,IAAI,EAAE;;MAE7C;MACA,IAAIE,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;QAC9BD,GAAG,GAAGA,GAAG,CAACH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACxB;MAEAX,GAAG,CAACU,GAAG,CAAC,GAAGM,SAAS,CAACF,GAAG,EAAEZ,GAAG,CAAC;IAChC;IAEAE,KAAK,GAAGI,MAAM,GAAG,CAAC;EACpB;EAEA,OAAOR,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAST,SAAS,CAAC0B,IAAI,EAAEH,GAAG,EAAEhB,OAAO,EAAE;EACrC,IAAIG,GAAG,GAAGH,OAAO,IAAI,CAAC,CAAC;EACvB,IAAIoB,GAAG,GAAGjB,GAAG,CAACkB,MAAM,IAAIA,MAAM;EAE9B,IAAI,OAAOD,GAAG,KAAK,UAAU,EAAE;IAC7B,MAAM,IAAInB,SAAS,CAAC,0BAA0B,CAAC;EACjD;EAEA,IAAI,CAACH,kBAAkB,CAACwB,IAAI,CAACH,IAAI,CAAC,EAAE;IAClC,MAAM,IAAIlB,SAAS,CAAC,0BAA0B,CAAC;EACjD;EAEA,IAAIsB,KAAK,GAAGH,GAAG,CAACJ,GAAG,CAAC;EAEpB,IAAIO,KAAK,IAAI,CAACzB,kBAAkB,CAACwB,IAAI,CAACC,KAAK,CAAC,EAAE;IAC5C,MAAM,IAAItB,SAAS,CAAC,yBAAyB,CAAC;EAChD;EAEA,IAAIF,GAAG,GAAGoB,IAAI,GAAG,GAAG,GAAGI,KAAK;EAE5B,IAAI,IAAI,IAAIpB,GAAG,CAACqB,MAAM,EAAE;IACtB,IAAIA,MAAM,GAAGrB,GAAG,CAACqB,MAAM,GAAG,CAAC;IAE3B,IAAIC,KAAK,CAACD,MAAM,CAAC,IAAI,CAACE,QAAQ,CAACF,MAAM,CAAC,EAAE;MACtC,MAAM,IAAIvB,SAAS,CAAC,0BAA0B,CAAC;IACjD;IAEAF,GAAG,IAAI,YAAY,GAAG4B,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;EAC1C;EAEA,IAAIrB,GAAG,CAAC0B,MAAM,EAAE;IACd,IAAI,CAAC/B,kBAAkB,CAACwB,IAAI,CAACnB,GAAG,CAAC0B,MAAM,CAAC,EAAE;MACxC,MAAM,IAAI5B,SAAS,CAAC,0BAA0B,CAAC;IACjD;IAEAF,GAAG,IAAI,WAAW,GAAGI,GAAG,CAAC0B,MAAM;EACjC;EAEA,IAAI1B,GAAG,CAAC2B,IAAI,EAAE;IACZ,IAAI,CAAChC,kBAAkB,CAACwB,IAAI,CAACnB,GAAG,CAAC2B,IAAI,CAAC,EAAE;MACtC,MAAM,IAAI7B,SAAS,CAAC,wBAAwB,CAAC;IAC/C;IAEAF,GAAG,IAAI,SAAS,GAAGI,GAAG,CAAC2B,IAAI;EAC7B;EAEA,IAAI3B,GAAG,CAAC4B,OAAO,EAAE;IACf,IAAIA,OAAO,GAAG5B,GAAG,CAAC4B,OAAO;IAEzB,IAAI,CAACC,MAAM,CAACD,OAAO,CAAC,IAAIN,KAAK,CAACM,OAAO,CAACE,OAAO,EAAE,CAAC,EAAE;MAChD,MAAM,IAAIhC,SAAS,CAAC,2BAA2B,CAAC;IAClD;IAEAF,GAAG,IAAI,YAAY,GAAGgC,OAAO,CAACG,WAAW,EAAE;EAC7C;EAEA,IAAI/B,GAAG,CAACgC,QAAQ,EAAE;IAChBpC,GAAG,IAAI,YAAY;EACrB;EAEA,IAAII,GAAG,CAACiC,MAAM,EAAE;IACdrC,GAAG,IAAI,UAAU;EACnB;EAEA,IAAII,GAAG,CAACkC,WAAW,EAAE;IACnBtC,GAAG,IAAI,eAAe;EACxB;EAEA,IAAII,GAAG,CAACmC,QAAQ,EAAE;IAChB,IAAIA,QAAQ,GAAG,OAAOnC,GAAG,CAACmC,QAAQ,KAAK,QAAQ,GAC3CnC,GAAG,CAACmC,QAAQ,CAACC,WAAW,EAAE,GAC1BpC,GAAG,CAACmC,QAAQ;IAEhB,QAAQA,QAAQ;MACd,KAAK,KAAK;QACRvC,GAAG,IAAI,gBAAgB;QACvB;MACF,KAAK,QAAQ;QACXA,GAAG,IAAI,mBAAmB;QAC1B;MACF,KAAK,MAAM;QACTA,GAAG,IAAI,iBAAiB;QACxB;MACF;QACE,MAAM,IAAIE,SAAS,CAAC,4BAA4B,CAAC;IAAA;EAEvD;EAEA,IAAIE,GAAG,CAACqC,QAAQ,EAAE;IAChB,IAAIA,QAAQ,GAAG,OAAOrC,GAAG,CAACqC,QAAQ,KAAK,QAAQ,GAC3CrC,GAAG,CAACqC,QAAQ,CAACD,WAAW,EAAE,GAAGpC,GAAG,CAACqC,QAAQ;IAE7C,QAAQA,QAAQ;MACd,KAAK,IAAI;QACPzC,GAAG,IAAI,mBAAmB;QAC1B;MACF,KAAK,KAAK;QACRA,GAAG,IAAI,gBAAgB;QACvB;MACF,KAAK,QAAQ;QACXA,GAAG,IAAI,mBAAmB;QAC1B;MACF,KAAK,MAAM;QACTA,GAAG,IAAI,iBAAiB;QACxB;MACF;QACE,MAAM,IAAIE,SAAS,CAAC,4BAA4B,CAAC;IAAC;EAExD;EAEA,OAAOF,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASM,MAAM,CAAEN,GAAG,EAAE;EACpB,OAAOA,GAAG,CAACU,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAC1BgC,kBAAkB,CAAC1C,GAAG,CAAC,GACvBA,GAAG;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASsB,MAAM,CAAEL,GAAG,EAAE;EACpB,OAAO0B,kBAAkB,CAAC1B,GAAG,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASgB,MAAM,CAAEhB,GAAG,EAAE;EACpB,OAAOtB,UAAU,CAACiD,IAAI,CAAC3B,GAAG,CAAC,KAAK,eAAe,IAC7CA,GAAG,YAAY4B,IAAI;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS1B,SAAS,CAACnB,GAAG,EAAEM,MAAM,EAAE;EAC9B,IAAI;IACF,OAAOA,MAAM,CAACN,GAAG,CAAC;EACpB,CAAC,CAAC,OAAO8C,CAAC,EAAE;IACV,OAAO9C,GAAG;EACZ;AACF;AAEA,SAAS+C,iBAAiB,GAAG;EACzB,IAAMC,YAAY,GAAG,OAAOC,MAAM,KAAK,WAAW,GAC5CjC,SAAS,GACTiC,MAAM,CAACC,wBAAwB;EACrC,IAAI,OAAOF,YAAY,KAAK,SAAS,EAAE;IACnC,OAAOA,YAAY;EACvB;EACA;EACA,OAAO,OAAOG,QAAQ,KAAK,QAAQ,IAAI,OAAOA,QAAQ,CAACC,MAAM,KAAK,QAAQ;AAC9E;AACA,SAASC,YAAY,CAACC,OAAO,EAAE;EAC3B,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC7B,OAAO/D,OAAO,CAAC+D,OAAO,CAAC;EAC3B,CAAC,MACI,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAAE;IACtD,OAAOA,OAAO;EAClB,CAAC,MACI;IACD,OAAO,CAAC,CAAC;EACb;AACJ;AACA,SAASC,UAAU,CAAC/B,KAAK,EAAgB;EAAA,IAAdvB,OAAO,uEAAG,CAAC,CAAC;EACnC,IAAMuD,UAAU,GAAGC,kBAAkB,CAACjC,KAAK,CAAC;EAC5C,IAAI,CAACvB,OAAO,CAACyD,UAAU,EAAE;IACrB,IAAI;MACA,OAAOC,IAAI,CAACnE,KAAK,CAACgE,UAAU,CAAC;IACjC,CAAC,CACD,OAAOV,CAAC,EAAE;MACN;IAAA;EAER;EACA;EACA;EACA,OAAOtB,KAAK;AAChB;AACA,SAASiC,kBAAkB,CAACjC,KAAK,EAAE;EAC/B;EACA,IAAIA,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC/C,OAAOA,KAAK,CAACoC,MAAM,CAAC,CAAC,CAAC;EAC1B;EACA,OAAOpC,KAAK;AAChB;AAAC,IAEKqC,OAAO;EACT,iBAAYP,OAAO,EAA0B;IAAA;IAAA,IAAxBQ,iBAAiB,uEAAG,CAAC,CAAC;IAAA;IACvC,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACC,MAAM,GAAG,YAAM;MAChB,IAAI,CAAC,KAAI,CAACD,mBAAmB,EAAE;QAC3B;MACJ;MACA,IAAME,eAAe,GAAG,KAAI,CAACZ,OAAO;MACpC,KAAI,CAACA,OAAO,GAAG/D,OAAO,CAAC4D,QAAQ,CAACC,MAAM,CAAC;MACvC,KAAI,CAACe,aAAa,CAACD,eAAe,CAAC;IACvC,CAAC;IACD,IAAME,UAAU,GAAG,OAAOjB,QAAQ,KAAK,WAAW,GAAG,EAAE,GAAGA,QAAQ,CAACC,MAAM;IACzE,IAAI,CAACE,OAAO,GAAGD,YAAY,CAACC,OAAO,IAAIc,UAAU,CAAC;IAClD,IAAI,CAACN,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACE,mBAAmB,GAAGjB,iBAAiB,EAAE;EAClD;EAAC;IAAA;IAAA,OACD,qBAAYsB,MAAM,EAAE;MAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACP,eAAe,CAACvD,MAAM,EAAE,EAAE8D,CAAC,EAAE;QAClD,IAAI,CAACP,eAAe,CAACO,CAAC,CAAC,CAACD,MAAM,CAAC;MACnC;IACJ;EAAC;IAAA;IAAA,OACD,uBAAcH,eAAe,EAAE;MAAA;MAC3B,IAAMK,KAAK,GAAG,IAAIC,GAAG,CAAC5E,MAAM,CAAC6E,IAAI,CAACP,eAAe,CAAC,CAACQ,MAAM,CAAC9E,MAAM,CAAC6E,IAAI,CAAC,IAAI,CAACnB,OAAO,CAAC,CAAC,CAAC;MACrFiB,KAAK,CAACI,OAAO,CAAC,UAACvD,IAAI,EAAK;QACpB,IAAI8C,eAAe,CAAC9C,IAAI,CAAC,KAAK,MAAI,CAACkC,OAAO,CAAClC,IAAI,CAAC,EAAE;UAC9C,MAAI,CAACwD,WAAW,CAAC;YACbxD,IAAI,EAAJA,IAAI;YACJI,KAAK,EAAE+B,UAAU,CAAC,MAAI,CAACD,OAAO,CAAClC,IAAI,CAAC;UACxC,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,yBAAgB;MACZ,IAAI,CAACyD,eAAe,GAAGC,WAAW,CAAC,IAAI,CAACb,MAAM,EAAE,GAAG,CAAC;IACxD;EAAC;IAAA;IAAA,OACD,wBAAe;MACX,IAAI,IAAI,CAACY,eAAe,EAAE;QACtBE,aAAa,CAAC,IAAI,CAACF,eAAe,CAAC;MACvC;IACJ;EAAC;IAAA;IAAA,OACD,aAAIzD,IAAI,EAAgB;MAAA,IAAdnB,OAAO,uEAAG,CAAC,CAAC;MAClB,IAAI,CAACA,OAAO,CAAC+E,WAAW,EAAE;QACtB,IAAI,CAACf,MAAM,EAAE;MACjB;MACA,OAAOV,UAAU,CAAC,IAAI,CAACD,OAAO,CAAClC,IAAI,CAAC,EAAEnB,OAAO,CAAC;IAClD;EAAC;IAAA;IAAA,OACD,kBAAqB;MAAA,IAAdA,OAAO,uEAAG,CAAC,CAAC;MACf,IAAI,CAACA,OAAO,CAAC+E,WAAW,EAAE;QACtB,IAAI,CAACf,MAAM,EAAE;MACjB;MACA,IAAMgB,MAAM,GAAG,CAAC,CAAC;MACjB,KAAK,IAAI7D,IAAI,IAAI,IAAI,CAACkC,OAAO,EAAE;QAC3B2B,MAAM,CAAC7D,IAAI,CAAC,GAAGmC,UAAU,CAAC,IAAI,CAACD,OAAO,CAAClC,IAAI,CAAC,EAAEnB,OAAO,CAAC;MAC1D;MACA,OAAOgF,MAAM;IACjB;EAAC;IAAA;IAAA,OACD,aAAI7D,IAAI,EAAEI,KAAK,EAAEvB,OAAO,EAAE;MACtB,IAAIA,OAAO,EAAE;QACTA,OAAO,GAAGL,MAAM,CAACsF,MAAM,CAACtF,MAAM,CAACsF,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACpB,iBAAiB,CAAC,EAAE7D,OAAO,CAAC;MAC/E,CAAC,MACI;QACDA,OAAO,GAAG,IAAI,CAAC6D,iBAAiB;MACpC;MACA,IAAMqB,WAAW,GAAG,OAAO3D,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGmC,IAAI,CAACyB,SAAS,CAAC5D,KAAK,CAAC;MAC7E,IAAI,CAAC8B,OAAO,GAAG1D,MAAM,CAACsF,MAAM,CAACtF,MAAM,CAACsF,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC5B,OAAO,CAAC,sBAAKlC,IAAI,EAAG+D,WAAW,EAAG;MACtF,IAAI,IAAI,CAACnB,mBAAmB,EAAE;QAC1Bb,QAAQ,CAACC,MAAM,GAAG3D,WAAW,CAAC2B,IAAI,EAAE+D,WAAW,EAAElF,OAAO,CAAC;MAC7D;MACA,IAAI,CAAC2E,WAAW,CAAC;QAAExD,IAAI,EAAJA,IAAI;QAAEI,KAAK,EAALA,KAAK;QAAEvB,OAAO,EAAPA;MAAQ,CAAC,CAAC;IAC9C;EAAC;IAAA;IAAA,OACD,gBAAOmB,IAAI,EAAEnB,OAAO,EAAE;MAClB,IAAMoF,YAAY,GAAIpF,OAAO,GAAGL,MAAM,CAACsF,MAAM,CAACtF,MAAM,CAACsF,MAAM,CAACtF,MAAM,CAACsF,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACpB,iBAAiB,CAAC,EAAE7D,OAAO,CAAC,EAAE;QAAE+B,OAAO,EAAE,IAAIa,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAAEpB,MAAM,EAAE;MAAE,CAAC,CAAE;MACxK,IAAI,CAAC6B,OAAO,GAAG1D,MAAM,CAACsF,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC5B,OAAO,CAAC;MAC9C,OAAO,IAAI,CAACA,OAAO,CAAClC,IAAI,CAAC;MACzB,IAAI,IAAI,CAAC4C,mBAAmB,EAAE;QAC1Bb,QAAQ,CAACC,MAAM,GAAG3D,WAAW,CAAC2B,IAAI,EAAE,EAAE,EAAEiE,YAAY,CAAC;MACzD;MACA,IAAI,CAACT,WAAW,CAAC;QAAExD,IAAI,EAAJA,IAAI;QAAEI,KAAK,EAAER,SAAS;QAAEf,OAAO,EAAPA;MAAQ,CAAC,CAAC;IACzD;EAAC;IAAA;IAAA,OACD,2BAAkBqF,QAAQ,EAAE;MACxB,IAAI,CAACvB,eAAe,CAACwB,IAAI,CAACD,QAAQ,CAAC;MACnC,IAAI,IAAI,CAACtB,mBAAmB,IAAI,IAAI,CAACD,eAAe,CAACvD,MAAM,KAAK,CAAC,EAAE;QAC/D,IAAI,OAAOgF,MAAM,KAAK,QAAQ,IAAI,aAAa,IAAIA,MAAM,EAAE;UACvDA,MAAM,CAACC,WAAW,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACzB,MAAM,CAAC;QAC9D,CAAC,MACI;UACD,IAAI,CAAC0B,aAAa,EAAE;QACxB;MACJ;IACJ;EAAC;IAAA;IAAA,OACD,8BAAqBL,QAAQ,EAAE;MAC3B,IAAMM,GAAG,GAAG,IAAI,CAAC7B,eAAe,CAACrD,OAAO,CAAC4E,QAAQ,CAAC;MAClD,IAAIM,GAAG,IAAI,CAAC,EAAE;QACV,IAAI,CAAC7B,eAAe,CAAC8B,MAAM,CAACD,GAAG,EAAE,CAAC,CAAC;MACvC;MACA,IAAI,IAAI,CAAC5B,mBAAmB,IAAI,IAAI,CAACD,eAAe,CAACvD,MAAM,KAAK,CAAC,EAAE;QAC/D,IAAI,OAAOgF,MAAM,KAAK,QAAQ,IAAI,aAAa,IAAIA,MAAM,EAAE;UACvDA,MAAM,CAACC,WAAW,CAACK,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC7B,MAAM,CAAC;QACjE,CAAC,MACI;UACD,IAAI,CAAC8B,YAAY,EAAE;QACvB;MACJ;IACJ;EAAC;EAAA;AAAA;AAGL,SAASlC,OAAO,IAAImC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}