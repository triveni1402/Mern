{"ast":null,"code":"import _asyncToGenerator from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _wrapAsyncGenerator from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nexport var streamChunk = /*#__PURE__*/_regeneratorRuntime().mark(function streamChunk(chunk, chunkSize) {\n  var len, pos, end;\n  return _regeneratorRuntime().wrap(function streamChunk$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        len = chunk.byteLength;\n        if (!(!chunkSize || len < chunkSize)) {\n          _context.next = 5;\n          break;\n        }\n        _context.next = 4;\n        return chunk;\n      case 4:\n        return _context.abrupt(\"return\");\n      case 5:\n        pos = 0;\n      case 6:\n        if (!(pos < len)) {\n          _context.next = 13;\n          break;\n        }\n        end = pos + chunkSize;\n        _context.next = 10;\n        return chunk.slice(pos, end);\n      case 10:\n        pos = end;\n        _context.next = 6;\n        break;\n      case 13:\n      case \"end\":\n        return _context.stop();\n    }\n  }, streamChunk);\n});\nexport var readBytes = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(iterable, chunkSize, encode) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context2.prev = 2;\n          _iterator = _asyncIterator(iterable);\n        case 4:\n          _context2.next = 6;\n          return _awaitAsyncGenerator(_iterator.next());\n        case 6:\n          if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n            _context2.next = 27;\n            break;\n          }\n          chunk = _step.value;\n          _context2.t0 = _asyncGeneratorDelegate;\n          _context2.t1 = _asyncIterator;\n          _context2.t2 = streamChunk;\n          if (!ArrayBuffer.isView(chunk)) {\n            _context2.next = 15;\n            break;\n          }\n          _context2.t3 = chunk;\n          _context2.next = 18;\n          break;\n        case 15:\n          _context2.next = 17;\n          return _awaitAsyncGenerator(encode(String(chunk)));\n        case 17:\n          _context2.t3 = _context2.sent;\n        case 18:\n          _context2.t4 = _context2.t3;\n          _context2.t5 = chunkSize;\n          _context2.t6 = (0, _context2.t2)(_context2.t4, _context2.t5);\n          _context2.t7 = (0, _context2.t1)(_context2.t6);\n          _context2.t8 = _awaitAsyncGenerator;\n          return _context2.delegateYield((0, _context2.t0)(_context2.t7, _context2.t8), \"t9\", 24);\n        case 24:\n          _iteratorAbruptCompletion = false;\n          _context2.next = 4;\n          break;\n        case 27:\n          _context2.next = 33;\n          break;\n        case 29:\n          _context2.prev = 29;\n          _context2.t10 = _context2[\"catch\"](2);\n          _didIteratorError = true;\n          _iteratorError = _context2.t10;\n        case 33:\n          _context2.prev = 33;\n          _context2.prev = 34;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context2.next = 38;\n            break;\n          }\n          _context2.next = 38;\n          return _awaitAsyncGenerator(_iterator.return());\n        case 38:\n          _context2.prev = 38;\n          if (!_didIteratorError) {\n            _context2.next = 41;\n            break;\n          }\n          throw _iteratorError;\n        case 41:\n          return _context2.finish(38);\n        case 42:\n          return _context2.finish(33);\n        case 43:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee, null, [[2, 29, 33, 43], [34,, 38, 42]]);\n  }));\n  return function readBytes(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var trackStream = function trackStream(stream, chunkSize, onProgress, onFinish, encode) {\n  var iterator = readBytes(stream, chunkSize, encode);\n  var bytes = 0;\n  return new ReadableStream({\n    type: 'bytes',\n    pull: function pull(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$iterator$next, done, value, len;\n        return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return iterator.next();\n            case 2:\n              _yield$iterator$next = _context3.sent;\n              done = _yield$iterator$next.done;\n              value = _yield$iterator$next.value;\n              if (!done) {\n                _context3.next = 9;\n                break;\n              }\n              controller.close();\n              onFinish();\n              return _context3.abrupt(\"return\");\n            case 9:\n              len = value.byteLength;\n              onProgress && onProgress(bytes += len);\n              controller.enqueue(new Uint8Array(value));\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    cancel: function cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  });\n};","map":{"version":3,"names":["streamChunk","chunk","chunkSize","len","byteLength","pos","end","slice","readBytes","iterable","encode","ArrayBuffer","isView","String","trackStream","stream","onProgress","onFinish","iterator","bytes","ReadableStream","type","pull","controller","next","done","value","close","enqueue","Uint8Array","cancel","reason","return","highWaterMark"],"sources":["/Users/tadapanenitriveni/Downloads/MERN-Recipe-App-main 2/MERN-Recipe-App-main 2/client/node_modules/axios/lib/helpers/trackStream.js"],"sourcesContent":["\n\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n\n  return new ReadableStream({\n    type: 'bytes',\n\n    async pull(controller) {\n      const {done, value} = await iterator.next();\n\n      if (done) {\n        controller.close();\n        onFinish();\n        return;\n      }\n\n      let len = value.byteLength;\n      onProgress && onProgress(bytes += len);\n      controller.enqueue(new Uint8Array(value));\n    },\n    cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n"],"mappings":";;;;;;AAEA,OAAO,IAAMA,WAAW,2CAAG,SAAdA,WAAW,CAAcC,KAAK,EAAEC,SAAS;EAAA;EAAA;IAAA;MAAA;QAChDC,GAAG,GAAGF,KAAK,CAACG,UAAU;QAAA,MAEtB,CAACF,SAAS,IAAIC,GAAG,GAAGD,SAAS;UAAA;UAAA;QAAA;QAAA;QAC/B,OAAMD,KAAK;MAAA;QAAA;MAAA;QAITI,GAAG,GAAG,CAAC;MAAA;QAAA,MAGJA,GAAG,GAAGF,GAAG;UAAA;UAAA;QAAA;QACdG,GAAG,GAAGD,GAAG,GAAGH,SAAS;QAAC;QACtB,OAAMD,KAAK,CAACM,KAAK,CAACF,GAAG,EAAEC,GAAG,CAAC;MAAA;QAC3BD,GAAG,GAAGC,GAAG;QAAC;QAAA;MAAA;MAAA;QAAA;IAAA;EAAA,GAdDN,WAAW;AAAA,CAgBvB;AAED,OAAO,IAAMQ,SAAS;EAAA,wEAAG,iBAAiBC,QAAQ,EAAEP,SAAS,EAAEQ,MAAM;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA;UAAA,2BACzCD,QAAQ;QAAA;UAAA;UAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAjBR,KAAK;UAAA;UAAA;UAAA,eACbD,WAAW;UAAA,KAACW,WAAW,CAACC,MAAM,CAACX,KAAK,CAAC;YAAA;YAAA;UAAA;UAAA,eAAGA,KAAK;UAAA;UAAA;QAAA;UAAA;UAAA,4BAAUS,MAAM,CAACG,MAAM,CAACZ,KAAK,CAAC,CAAC;QAAA;UAAA;QAAA;UAAA;UAAA,eAAGC,SAAS;UAAA;UAAA;UAAA;UAA/F;QAAgG;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;YAAA;YAAA;UAAA;UAAA;UAAA;QAAA;UAAA;UAAA;YAAA;YAAA;UAAA;UAAA;QAAA;UAAA;QAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAEnG;EAAA,gBAJYM,SAAS;IAAA;EAAA;AAAA,GAIrB;AAED,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAW,CAAIC,MAAM,EAAEb,SAAS,EAAEc,UAAU,EAAEC,QAAQ,EAAEP,MAAM,EAAK;EAC9E,IAAMQ,QAAQ,GAAGV,SAAS,CAACO,MAAM,EAAEb,SAAS,EAAEQ,MAAM,CAAC;EAErD,IAAIS,KAAK,GAAG,CAAC;EAEb,OAAO,IAAIC,cAAc,CAAC;IACxBC,IAAI,EAAE,OAAO;IAEPC,IAAI,gBAACC,UAAU,EAAE;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACOL,QAAQ,CAACM,IAAI,EAAE;YAAA;cAAA;cAApCC,IAAI,wBAAJA,IAAI;cAAEC,KAAK,wBAALA,KAAK;cAAA,KAEdD,IAAI;gBAAA;gBAAA;cAAA;cACNF,UAAU,CAACI,KAAK,EAAE;cAClBV,QAAQ,EAAE;cAAC;YAAA;cAITd,GAAG,GAAGuB,KAAK,CAACtB,UAAU;cAC1BY,UAAU,IAAIA,UAAU,CAACG,KAAK,IAAIhB,GAAG,CAAC;cACtCoB,UAAU,CAACK,OAAO,CAAC,IAAIC,UAAU,CAACH,KAAK,CAAC,CAAC;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAC5C,CAAC;IACDI,MAAM,kBAACC,MAAM,EAAE;MACbd,QAAQ,CAACc,MAAM,CAAC;MAChB,OAAOb,QAAQ,CAACc,MAAM,EAAE;IAC1B;EACF,CAAC,EAAE;IACDC,aAAa,EAAE;EACjB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}